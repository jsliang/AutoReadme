// Generated by CoffeeScript 1.4.0

/*
AutoReadme v0.0.1
http://jsliang.github.com/AutoReadme

Copyright (c) 2013, Jui-Shan Liang <jenny@jsliang.com>
All rights reserved.
Licensed under GPL v2.
*/


(function() {
  var $;

  $ = jQuery;

  $.fn.extend({
    autoReadme: function(options) {
      var template, template_str;
      template = options.template;
      template_str = $("#template #" + template).html();
      $("#template").hide();
      return this.each(function() {
        var apply_template, container, convert_markdown_to_html, filename, repository, username;
        container = $(this);
        convert_markdown_to_html = function() {
          var contents, converter;
          converter = new Showdown.converter();
          contents = container.html();
          return container.html(converter.makeHtml(contents));
        };
        apply_template = function() {
          var env, h2_headings, templ_variables, tmpl;
          env = new nunjucks.Environment();
          tmpl = new nunjucks.Template(template_str);
          h2_headings = [];
          $("h2").each(function() {
            var h3_headings, heading, subheading_elements;
            h3_headings = [];
            subheading_elements = $(this).nextUntil("h2", "h3");
            if (subheading_elements != null) {
              subheading_elements.each(function() {
                var subheading;
                subheading = {
                  id: $(this).attr('id'),
                  text: $(this).text()
                };
                return h3_headings.push(subheading);
              });
            }
            heading = {
              id: $(this).attr('id'),
              text: $(this).text(),
              subheadings: h3_headings
            };
            return h2_headings.push(heading);
          });
          templ_variables = {
            name: "SublimePelican",
            headings: h2_headings,
            contents: container.html()
          };
          templ_variables = $.extend(templ_variables, options);
          return container.html(tmpl.render(templ_variables));
        };
        username = options.username;
        repository = options.repository;
        filename = options.filename;
        return $.ajax({
          type: "GET",
          url: "https://api.github.com/repos/" + username + "/" + repository + "/contents/" + filename,
          dataType: "jsonp",
          success: function(data) {
            var decoded_content;
            decoded_content = window.atob(data.data.content.replace(/\n/g, "").replace(/\r/g, ""));
            decoded_content = decoded_content.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&");
            container.text(decoded_content);
            convert_markdown_to_html();
            $(document).attr('title', container.find("h1:first").text());
            return apply_template();
          }
        });
      });
    }
  });

}).call(this);
