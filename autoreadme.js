// Generated by CoffeeScript 1.4.0

/*
AutoReadme v0.0.1
http://jsliang.github.com/AutoReadme

Copyright (c) 2013, Jui-Shan Liang <jenny@jsliang.com>
All rights reserved.
Licensed under GPL v2.
*/


(function() {
  var $, generate_template;

  $ = jQuery;

  generate_template = function() {
    var template_str;
    template_str = '\
<div id="TOC">\
    <h1>{{ name }}</h1>\
    <ul>\
    {% for heading in headings %}\
    <li>\
        <a href="#{{ heading.id }}">{{ heading.text }}</a>\
        <ul>\
        {% for subheading in heading.subheadings %}\
        <li>\
            <a href="#{{ subheading.id }}">{{ subheading.text }}</a>\
        </li>\
        {% endfor %}\
        </ul>\
    </li>\
    {% endfor %}\
    </ul>\
</div>\
<div id="content">{{ contents }}</div>\
';
    return template_str;
  };

  $.fn.extend({
    autoReadme: function() {
      return this.each(function() {
        var apply_template, container, convert_markdown_to_html;
        container = $(this);
        convert_markdown_to_html = function() {
          var contents, converter;
          converter = new Showdown.converter();
          contents = container.html();
          return container.html(converter.makeHtml(contents));
        };
        apply_template = function() {
          var env, h2_headings, templ_variables, tmpl;
          env = new nunjucks.Environment();
          tmpl = new nunjucks.Template(generate_template());
          h2_headings = [];
          $("h2").each(function() {
            var h3_headings, heading, subheading_elements;
            h3_headings = [];
            subheading_elements = $(this).nextUntil("h2", "h3");
            if (subheading_elements != null) {
              subheading_elements.each(function() {
                var subheading;
                subheading = {
                  id: $(this).attr('id'),
                  text: $(this).text()
                };
                return h3_headings.push(subheading);
              });
            }
            heading = {
              id: $(this).attr('id'),
              text: $(this).text(),
              subheadings: h3_headings
            };
            return h2_headings.push(heading);
          });
          templ_variables = {
            name: "SublimePelican",
            headings: h2_headings,
            contents: container.html()
          };
          return container.html(tmpl.render(templ_variables));
        };
        /*
                    $.getGithubFileByFilePath("jsliang", "sublime-pelican", "README.md", (contents) ->
                        $(this).html(converter.makeHtml(contents))
                        $(document).attr('title', $("h1:first").text())
                    )
        */

        convert_markdown_to_html();
        return apply_template();
      });
    }
  });

}).call(this);
